from zou.app.utils.api import create_blueprint_for_api

from .resources import (
    AssetTasksResource,
    AssetTaskTypesResource,
    AssetTypeAssetsResource,
    ClearAvatarResource,
    ContextResource,
    DateTimeSpentsResource,
    DayOffResource,
    OpenProjectsResource,
    ProjectEpisodesResource,
    ProjectSequencesResource,
    ProjectAssetTypesResource,
    SceneTasksResource,
    SceneTaskTypesResource,
    SequenceTasksResource,
    SequenceTaskTypesResource,
    SequenceShotsResource,
    SequenceScenesResource,
    ShotTasksResource,
    ShotTaskTypesResource,
    ToChecksResource,
    TodosResource,
    DoneResource,
    FilterResource,
    DesktopLoginLogsResource,
    FiltersResource,
    NotificationsResource,
    NotificationResource,
    HasTaskSubscribedResource,
    TaskSubscribeResource,
    TaskUnsubscribeResource,
    TaskTimeSpentResource,
    TimeSpentsResource,
    HasSequenceSubscribedResource,
    SequenceSubscriptionsResource,
    SequenceSubscribeResource,
    SequenceUnsubscribeResource,
)

routes = [
    ("/data/user/context", ContextResource),
    ("/data/user/assets/<uuid:asset_id>/tasks", AssetTasksResource),
    ("/data/user/shots/<uuid:shot_id>/tasks", ShotTasksResource),
    ("/data/user/scenes/<uuid:scene_id>/tasks", SceneTasksResource),
    ("/data/user/sequences/<uuid:sequence_id>/tasks", SequenceTasksResource),
    ("/data/user/assets/<uuid:asset_id>/task-types", AssetTaskTypesResource),
    ("/data/user/shots/<uuid:shot_id>/task-types", ShotTaskTypesResource),
    ("/data/user/scenes/<uuid:scene_id>/task-types", SceneTaskTypesResource),
    (
        "/data/user/sequences/<uuid:sequence_id>/task-types",
        SequenceTaskTypesResource,
    ),
    ("/data/user/projects/open", OpenProjectsResource),
    (
        "/data/user/projects/<uuid:project_id>/asset-types",
        ProjectAssetTypesResource,
    ),
    (
        "/data/user/projects/<uuid:project_id>/asset-types/<uuid:asset_type_id>/assets",
        AssetTypeAssetsResource,
    ),
    (
        "/data/user/projects/<uuid:project_id>/sequences",
        ProjectSequencesResource,
    ),
    (
        "/data/user/projects/<uuid:project_id>/episodes",
        ProjectEpisodesResource,
    ),
    ("/data/user/sequences/<uuid:sequence_id>/shots", SequenceShotsResource),
    ("/data/user/sequences/<uuid:sequence_id>/scenes", SequenceScenesResource),
    ("/data/user/tasks", TodosResource),
    ("/data/user/tasks-to-check", ToChecksResource),
    ("/data/user/done-tasks", DoneResource),
    ("/data/user/filters", FiltersResource),
    ("/data/user/filters/<uuid:filter_id>", FilterResource),
    ("/data/user/desktop-login-logs", DesktopLoginLogsResource),
    ("/data/user/time-spents", TimeSpentsResource),
    ("/data/user/time-spents/<string:date>", DateTimeSpentsResource),
    (
        "/data/user/tasks/<uuid:task_id>/time-spents/<string:date>",
        TaskTimeSpentResource,
    ),
    ("/data/user/day-offs/<string:date>", DayOffResource),
    ("/data/user/notifications", NotificationsResource),
    ("/data/user/notifications/<uuid:notification_id>", NotificationResource),
    ("/data/user/tasks/<uuid:task_id>/subscribed", HasTaskSubscribedResource),
    ("/actions/user/tasks/<uuid:task_id>/subscribe", TaskSubscribeResource),
    (
        "/actions/user/tasks/<uuid:task_id>/unsubscribe",
        TaskUnsubscribeResource,
    ),
    ("/actions/user/clear-avatar", ClearAvatarResource),
    (
        "/data/user/entities/<uuid:sequence_id>/task-types/<uuid:task_type_id>/subscribed",
        HasSequenceSubscribedResource,
    ),
    (
        "/data/user/projects/<uuid:project_id>/task-types/<uuid:task_type_id>/sequence-subscriptions",
        SequenceSubscriptionsResource,
    ),
    (
        "/actions/user/sequences/<uuid:sequence_id>/task-types/<uuid:task_type_id>/subscribe",
        SequenceSubscribeResource,
    ),
    (
        "/actions/user/sequences/<uuid:sequence_id>/task-types/<uuid:task_type_id>/unsubscribe",
        SequenceUnsubscribeResource,
    ),
]

blueprint = create_blueprint_for_api("user", routes)
